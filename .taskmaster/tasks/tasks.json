{
  "master": {
    "tasks": [
      {
        "id": 1,
        "title": "프로젝트 저장소 설정",
        "description": "Unity 2023 프로젝트 저장소를 버전 관리와 기본 폴더 구조로 초기화합니다.",
        "details": "새로운 Unity 2023 프로젝트를 생성합니다. Unity용 .gitignore와 함께 Git 저장소를 설정합니다. 스크립트, 에셋, 씬, 프리팹, 문서용 폴더를 구성합니다.",
        "testStrategy": "저장소에 접근 가능하고, Unity 프로젝트가 오류 없이 열리며, 폴더 구조가 존재하는지 확인합니다.",
        "priority": "high",
        "dependencies": [],
        "status": "pending",
        "subtasks": []
      },
      {
        "id": 2,
        "title": "핵심 Unity 패키지 임포트",
        "description": "VR/PC 개발을 위한 필수 Unity 패키지를 임포트합니다.",
        "details": "Input System, XR Interaction Toolkit, Photon 2 패키지를 Unity 패키지 매니저로 설치합니다. VR/PC 호환을 위한 프로젝트 설정을 구성합니다.",
        "testStrategy": "모든 패키지가 설치되고 프로젝트 설정이 올바르게 구성되었는지 확인합니다.",
        "priority": "high",
        "dependencies": [1],
        "status": "pending",
        "subtasks": []
      },
      {
        "id": 3,
        "title": "3D 환경 에셋 디자인 및 임포트",
        "description": "게임을 위한 3D 집 환경 에셋을 제작 또는 임포트합니다.",
        "details": "집 내부와 외부의 3D 모델을 디자인하거나 확보합니다. Unity에 임포트하고, 머티리얼, 라이팅, 기본 콜리전을 설정합니다.",
        "testStrategy": "에셋이 Unity 씬에 잘 보이고, 라이팅과 콜리전이 정상 동작하는지 확인합니다.",
        "priority": "medium",
        "dependencies": [1],
        "status": "pending",
        "subtasks": []
      },
      {
        "id": 4,
        "title": "1인칭 컨트롤러(VR/PC) 구현",
        "description": "VR과 PC 입력을 모두 지원하는 1인칭 컨트롤러를 개발합니다.",
        "details": "Input System과 XR Interaction Toolkit을 활용해 기본 컨트롤러를 만듭니다. PC는 키보드/마우스, VR은 손 추적/컨트롤러를 지원합니다. 부드러운 이동과 카메라 제어를 보장합니다.",
        "testStrategy": "VR과 PC 모드 모두에서 이동과 카메라가 정상 동작하는지, 입력 전환이 잘 되는지 테스트합니다.",
        "priority": "high",
        "dependencies": [2],
        "status": "pending",
        "subtasks": []
      },
      {
        "id": 5,
        "title": "오브젝트 상호작용 시스템 개발",
        "description": "VR/PC용 핵심 오브젝트 상호작용 메커니즘을 구현합니다.",
        "details": "오브젝트를 집기, 놓기, 던지기 위한 스크립트를 만듭니다. VR은 손 추적, PC는 마우스/키보드를 지원합니다. 상호작용 가능한 오브젝트는 하이라이트 처리합니다.",
        "testStrategy": "VR과 PC 모두에서 오브젝트 상호작용이 잘 되고, 하이라이트와 물리 효과가 정상인지 확인합니다.",
        "priority": "high",
        "dependencies": [3, 4],
        "status": "pending",
        "subtasks": []
      },
      {
        "id": 6,
        "title": "게임 시작 시퀀스 및 튜토리얼 개발",
        "description": "게임 시작 시퀀스와 기본 조작 튜토리얼을 만듭니다.",
        "details": "인트로 시퀀스와 조작/상호작용 튜토리얼을 설명합니다. 최소 UI와 환경적 스토리텔링을 활용합니다.",
        "testStrategy": "시퀀스 흐름, 튜토리얼의 명확성, UI 통합을 테스트합니다.",
        "priority": "medium",
        "dependencies": [4, 5],
        "status": "pending",
        "subtasks": []
      },
      {
        "id": 7,
        "title": "첫 번째 퍼즐 스테이지 구현",
        "description": "환경 단서와 오브젝트 상호작용이 포함된 첫 퍼즐 스테이지를 만듭니다.",
        "details": "오브젝트 배치, 색상 변화, 환경적 힌트를 활용해 첫 퍼즐을 디자인하고 스크립트화합니다. 상호작용 시스템과 통합합니다. 예시) ",
        "testStrategy": "퍼즐 논리, 오브젝트 상호작용, 단서 노출이 잘 동작하는지 테스트합니다.",
        "priority": "medium",
        "dependencies": [5],
        "status": "pending",
        "subtasks": []
      },
      {
        "id": 8,
        "title": "두 번째 퍼즐 스테이지 구현",
        "description": "Unity Stencil 착시 퍼즐 기믹 스테이지를 만듭니다.",
        "details": "Stencil을 활용해 두 플레이어가 서로 다른 오브젝트를 보게 합니다. 이를 통해 힌트를 획득해 퍼즐을 해결합니다.",
        "testStrategy": "Stencil의 구현 확인을 위해 각 표면에 ",
        "priority": "medium",
        "dependencies": [5],
        "status": "pending",
        "subtasks": []
      },
      {
        "id": 9,
        "title": "합동 스테이지 구현",
        "description": "2D 데스크탑 UI와 진상 파일 시스템을 만듭니다.",
        "details": "파일 탐색을 위한 2D 데스크탑 UI를 디자인/스크립트화합니다. 스토리 요소를 드러내는 진상 파일을 구현합니다.",
        "testStrategy": "UI 탐색, 파일 접근, 스토리 노출이 잘 되는지 테스트합니다.",
        "priority": "medium",
        "dependencies": [6, 7],
        "status": "pending",
        "subtasks": []
      },
      {
        "id": 10,
        "title": "",
        "description": "캐릭터 전환 효과를 구현합니다.",
        "details": "캐릭터 전환 효과를 구현합니다.",
        "testStrategy": "캐릭터 전환 효과가 잘 구현되었는지 테스트합니다.",
        "priority": "medium",
        "dependencies": [7, 10],
        "status": "pending",
        "subtasks": []
      },
      {
        "id": 11,
        "title": "단일 엔딩 시퀀스 구현",
        "description": "최초 단일 엔딩 시퀀스를 만듭니다.",
        "details": "퍼즐 완료 시 트리거되는 엔딩 시퀀스를 스크립트화합니다. 최소 UI와 환경적 연출을 사용합니다.",
        "testStrategy": "엔딩 트리거, 시퀀스 흐름, UI 통합을 테스트합니다.",
        "priority": "medium",
        "dependencies": [7, 10],
        "status": "pending",
        "subtasks": []
      },
      {
        "id": 12,
        "title": "Photon 2 멀티플레이 서버 설정",
        "description": "멀티플레이 지원을 위해 Photon 2를 구성합니다.",
        "details": "Photon 2 SDK를 통합하고, 기본 방 생성, 참가, 플레이어 동기화를 설정합니다.",
        "testStrategy": "방 생성, 참가, 기본 플레이어 동기화가 잘 되는지 테스트합니다.",
        "priority": "medium",
        "dependencies": [2],
        "status": "pending",
        "subtasks": []
      },
      {
        "id": 13,
        "title": "멀티플레이 오브젝트 동기화 구현",
        "description": "멀티플레이 게임플레이를 위한 오브젝트 동기화를 추가합니다.",
        "details": "Photon 2를 활용해 오브젝트 상호작용 시스템을 확장, 오브젝트 상태를 클라이언트 간 동기화합니다.",
        "testStrategy": "멀티플레이에서 오브젝트 동기화가 일관성 있게 동작하는지 테스트합니다.",
        "priority": "medium",
        "dependencies": [5, 12],
        "status": "pending",
        "subtasks": []
      },
      {
        "id": 14,
        "title": "추가 퍼즐 메커니즘 개발",
        "description": "새로운 퍼즐 메커니즘과 스테이지를 추가합니다.",
        "details": "RFID 슬롯, 벽 두드리기 등 추가 퍼즐을 디자인/스크립트화하고 기존 시스템과 통합합니다.",
        "testStrategy": "새 퍼즐 논리와 통합이 잘 동작하는지 테스트합니다.",
        "priority": "low",
        "dependencies": [7, 13],
        "status": "pending",
        "subtasks": []
      },
      {
        "id": 17,
        "title": "아트 및 사운드 자산 고도화",
        "description": "몰입감을 위한 아트 및 사운드 자산을 업그레이드합니다.",
        "details": "고품질 아트, 사운드 이펙트, 음악을 임포트 및 통합합니다. 성능 최적화도 함께 진행합니다.",
        "testStrategy": "자산 품질, 성능, 몰입감이 잘 구현되었는지 테스트합니다.",
        "priority": "low",
        "dependencies": [3, 10],
        "status": "pending",
        "subtasks": []
      },
      {
        "id": 18,
        "title": "게임 최적화 및 마무리",
        "description": "게임 성능을 최적화하고 모든 기능을 마무리합니다.",
        "details": "렌더링, 물리, 네트워킹을 프로파일링 및 최적화합니다. 버그 수정, UI 다듬기, 크로스플랫폼 호환성 확보까지 마무리합니다.",
        "testStrategy": "성능, 안정성, 플랫폼 호환성이 모두 충족되는지 테스트합니다.",
        "priority": "low",
        "dependencies": [13, 16, 17],
        "status": "pending",
        "subtasks": []
      }
    ],
    "metadata": {
      "created": "2025-07-01T07:02:44.267Z",
      "updated": "2025-07-01T07:02:44.267Z",
      "description": "마스터 컨텍스트용 태스크 목록"
    }
  }
}